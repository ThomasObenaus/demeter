// Code generated by MockGen. DO NOT EDIT.
// Source: nomadConnector/nomadclient.go

// Package mock_nomadConnector is a generated GoMock package.
package mock_nomadConnector

import (
	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/nomad/api"
	reflect "reflect"
)

// MockNomadClient is a mock of NomadClient interface
type MockNomadClient struct {
	ctrl     *gomock.Controller
	recorder *MockNomadClientMockRecorder
}

// MockNomadClientMockRecorder is the mock recorder for MockNomadClient
type MockNomadClientMockRecorder struct {
	mock *MockNomadClient
}

// NewMockNomadClient creates a new mock instance
func NewMockNomadClient(ctrl *gomock.Controller) *MockNomadClient {
	mock := &MockNomadClient{ctrl: ctrl}
	mock.recorder = &MockNomadClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNomadClient) EXPECT() *MockNomadClientMockRecorder {
	return m.recorder
}

// Deployments mocks base method
func (m *MockNomadClient) Deployments() *api.Deployments {
	ret := m.ctrl.Call(m, "Deployments")
	ret0, _ := ret[0].(*api.Deployments)
	return ret0
}

// Deployments indicates an expected call of Deployments
func (mr *MockNomadClientMockRecorder) Deployments() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deployments", reflect.TypeOf((*MockNomadClient)(nil).Deployments))
}

// Evaluations mocks base method
func (m *MockNomadClient) Evaluations() *api.Evaluations {
	ret := m.ctrl.Call(m, "Evaluations")
	ret0, _ := ret[0].(*api.Evaluations)
	return ret0
}

// Evaluations indicates an expected call of Evaluations
func (mr *MockNomadClientMockRecorder) Evaluations() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Evaluations", reflect.TypeOf((*MockNomadClient)(nil).Evaluations))
}

// MockNomadJobs is a mock of NomadJobs interface
type MockNomadJobs struct {
	ctrl     *gomock.Controller
	recorder *MockNomadJobsMockRecorder
}

// MockNomadJobsMockRecorder is the mock recorder for MockNomadJobs
type MockNomadJobsMockRecorder struct {
	mock *MockNomadJobs
}

// NewMockNomadJobs creates a new mock instance
func NewMockNomadJobs(ctrl *gomock.Controller) *MockNomadJobs {
	mock := &MockNomadJobs{ctrl: ctrl}
	mock.recorder = &MockNomadJobsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNomadJobs) EXPECT() *MockNomadJobsMockRecorder {
	return m.recorder
}

// Info mocks base method
func (m *MockNomadJobs) Info(jobID string, q *api.QueryOptions) (*api.Job, *api.QueryMeta, error) {
	ret := m.ctrl.Call(m, "Info", jobID, q)
	ret0, _ := ret[0].(*api.Job)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Info indicates an expected call of Info
func (mr *MockNomadJobsMockRecorder) Info(jobID, q interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockNomadJobs)(nil).Info), jobID, q)
}

// Register mocks base method
func (m *MockNomadJobs) Register(job *api.Job, q *api.WriteOptions) (*api.JobRegisterResponse, *api.WriteMeta, error) {
	ret := m.ctrl.Call(m, "Register", job, q)
	ret0, _ := ret[0].(*api.JobRegisterResponse)
	ret1, _ := ret[1].(*api.WriteMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Register indicates an expected call of Register
func (mr *MockNomadJobsMockRecorder) Register(job, q interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockNomadJobs)(nil).Register), job, q)
}
