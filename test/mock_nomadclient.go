// Code generated by MockGen. DO NOT EDIT.
// Source: nomadConnector/nomadclient.go

// Package mock_nomadConnector is a generated GoMock package.
package mock_nomadConnector

import (
	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/nomad/api"
	reflect "reflect"
)

// MockNomadClient is a mock of NomadClient interface
type MockNomadClient struct {
	ctrl     *gomock.Controller
	recorder *MockNomadClientMockRecorder
}

// MockNomadClientMockRecorder is the mock recorder for MockNomadClient
type MockNomadClientMockRecorder struct {
	mock *MockNomadClient
}

// NewMockNomadClient creates a new mock instance
func NewMockNomadClient(ctrl *gomock.Controller) *MockNomadClient {
	mock := &MockNomadClient{ctrl: ctrl}
	mock.recorder = &MockNomadClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNomadClient) EXPECT() *MockNomadClientMockRecorder {
	return m.recorder
}

// Deployments mocks base method
func (m *MockNomadClient) Deployments() *api.Deployments {
	ret := m.ctrl.Call(m, "Deployments")
	ret0, _ := ret[0].(*api.Deployments)
	return ret0
}

// Deployments indicates an expected call of Deployments
func (mr *MockNomadClientMockRecorder) Deployments() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deployments", reflect.TypeOf((*MockNomadClient)(nil).Deployments))
}

// Evaluations mocks base method
func (m *MockNomadClient) Evaluations() *api.Evaluations {
	ret := m.ctrl.Call(m, "Evaluations")
	ret0, _ := ret[0].(*api.Evaluations)
	return ret0
}

// Evaluations indicates an expected call of Evaluations
func (mr *MockNomadClientMockRecorder) Evaluations() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Evaluations", reflect.TypeOf((*MockNomadClient)(nil).Evaluations))
}

// Jobs mocks base method
func (m *MockNomadClient) Jobs() *api.Jobs {
	ret := m.ctrl.Call(m, "Jobs")
	ret0, _ := ret[0].(*api.Jobs)
	return ret0
}

// Jobs indicates an expected call of Jobs
func (mr *MockNomadClientMockRecorder) Jobs() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Jobs", reflect.TypeOf((*MockNomadClient)(nil).Jobs))
}
