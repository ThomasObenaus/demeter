{
  "SokarServiceTemplate": {
    "prefix": "sokar-service",
    "scope": "hcl",
    "body": [
      "job \"${1:service-name}\" {",
      "  datacenters = [${2:\"public-services\"}]",
      "",
      "  type = \"service\"",
      "",
      "  reschedule {",
      "    delay          = \"30s\"",
      "    delay_function = \"constant\"",
      "    unlimited      = true",
      "  }",
      "",
      "  update {",
      "    max_parallel      = 1",
      "    health_check      = \"checks\"",
      "    min_healthy_time  = \"10s\"",
      "    healthy_deadline  = \"5m\"",
      "    progress_deadline = \"10m\"",
      "    auto_revert       = true",
      "    canary            = 0",
      "    stagger           = \"30s\"",
      "  }",
      "",
      "  group \"${1:service-name}\" {",
      "    count = 1",
      "",
      "    restart {",
      "      interval = \"10m\"",
      "      attempts = 2",
      "      delay    = \"15s\"",
      "      mode     = \"fail\"",
      "    }",
      "",
      "    task \"${1:service-name}\" {",
      "      driver = \"docker\"",
      "",
      "      config {",
      "        image = \"thobe/sokar:latest\"",
      "",
      "        port_map = {",
      "          http = 11000",
      "        }",
      "        # Needed to overwrite the --help (default argument of the sokar docker container)",
      "        args = [",
      "          \"\",",
      "        ]",
      "",
      "      }",
      "",
      "      # https://www.nomadproject.io/docs/job-specification/env.html",
      "      env {",
      "        SK_NOMAD_SERVER_ADDRESS=\"http://${attr.unique.network.ip-address}:4646\"",
      "        SK_LOGGING_NO_COLOR=true",
      "",
      "        SK_JOB_NAME=\"${3:job-name}\"",
      "        SK_JOB_MIN=${4:job-min-count}",
      "        SK_JOB_MAX=${5:job-max-count}",
      "        SK_SAA_SCALE_ALERTS=\"${6:alert-weigths}\"",
      "}",
      "",
      "      service {",
      "        name = \"${1:service-name}\"",
      "        port = \"http\"",
      "        tags = [\"urlprefix-/${1:service-name} strip=/${1:service-name}\", \"${1:service-name}\", \"enable-metrics\", \"stack=service.${7:stack}\", \"metrics-path=/metrics\"]",
      "",
      "        check {",
      "          name     = \"${1:service-name} health using http endpoint '/health'\"",
      "          port     = \"http\"",
      "          type     = \"http\"",
      "          path     = \"/health\"",
      "          method   = \"GET\"",
      "          interval = \"10s\"",
      "          timeout  = \"2s\"",
      "        }",
      "",
      "        check_restart {",
      "          limit = 3",
      "          grace = \"10s\"",
      "          ignore_warnings = false",
      "        }",
      "      }",
      "",
      "      resources {",
      "        cpu    = 100 # MHz",
      "        memory = 256 # MB",
      "        network {",
      "          mbits = 10",
      "          port \"http\" {}",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ],
    "description": "Nomad job definition for sokar."
  }
}
